// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `iceInterfaces.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.onek.server.inf;

/**
 * 接口调用结构体
 **/
public class IRequest implements java.lang.Cloneable, java.io.Serializable
{
    public String pkg;

    public String cls;

    public String method;

    public IParam param;

    public IRequest()
    {
        pkg = "";
        cls = "";
        method = "";
        param = new IParam();
    }

    public IRequest(String pkg, String cls, String method, IParam param)
    {
        this.pkg = pkg;
        this.cls = cls;
        this.method = method;
        this.param = param;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        IRequest _r = null;
        if(rhs instanceof IRequest)
        {
            _r = (IRequest)rhs;
        }

        if(_r != null)
        {
            if(pkg != _r.pkg)
            {
                if(pkg == null || _r.pkg == null || !pkg.equals(_r.pkg))
                {
                    return false;
                }
            }
            if(cls != _r.cls)
            {
                if(cls == null || _r.cls == null || !cls.equals(_r.cls))
                {
                    return false;
                }
            }
            if(method != _r.method)
            {
                if(method == null || _r.method == null || !method.equals(_r.method))
                {
                    return false;
                }
            }
            if(param != _r.param)
            {
                if(param == null || _r.param == null || !param.equals(_r.param))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::inf::IRequest");
        __h = IceInternal.HashUtil.hashAdd(__h, pkg);
        __h = IceInternal.HashUtil.hashAdd(__h, cls);
        __h = IceInternal.HashUtil.hashAdd(__h, method);
        __h = IceInternal.HashUtil.hashAdd(__h, param);
        return __h;
    }

    public IRequest
    clone()
    {
        IRequest c = null;
        try
        {
            c = (IRequest)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(pkg);
        __os.writeString(cls);
        __os.writeString(method);
        IParam.__write(__os, param);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        pkg = __is.readString();
        cls = __is.readString();
        method = __is.readString();
        param = IParam.__read(__is, param);
    }

    static public void
    __write(IceInternal.BasicStream __os, IRequest __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public IRequest
    __read(IceInternal.BasicStream __is, IRequest __v)
    {
        if(__v == null)
        {
             __v = new IRequest();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final IRequest __nullMarshalValue = new IRequest();

    public static final long serialVersionUID = -1682443326L;
}
